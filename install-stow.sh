#!/bin/bash

# Script ƒë·ªÉ setup dotfiles s·ª≠ d·ª•ng GNU Stow
# Stow t·ª± ƒë·ªông t·∫°o symlinks t·ª´ dotfiles directory v√†o home directory

set -e

# Ki·ªÉm tra n·∫øu stow ƒë√£ ƒë∆∞·ª£c c√†i ƒë·∫∑t
if ! command -v stow &> /dev/null; then
    echo "‚ùå GNU Stow ch∆∞a ƒë∆∞·ª£c c√†i ƒë·∫∑t!"
    echo "üç∫ C√†i ƒë·∫∑t v·ªõi Homebrew:"
    echo "   brew install stow"
    echo ""
    echo "üìñ Ho·∫∑c c√†i v·ªõi package manager kh√°c:"
    echo "   macOS: brew install stow"
    echo "   Ubuntu/Debian: sudo apt install stow"
    echo "   Arch: sudo pacman -S stow"
    exit 1
fi

DOTFILES_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
echo "üîó ƒêang setup dotfiles v·ªõi GNU Stow..."
echo "üìÅ Dotfiles directory: $DOTFILES_DIR"

# T·∫°o c·∫•u tr√∫c th∆∞ m·ª•c cho stow
echo ""
echo "üèóÔ∏è  Chu·∫©n b·ªã c·∫•u tr√∫c th∆∞ m·ª•c cho Stow..."

# T·∫°o package directories n·∫øu ch∆∞a c√≥
mkdir -p dotfiles/{.config,.hammerspoon,.vim,.tmux}

# Di chuy·ªÉn c√°c dotfiles v√†o package directory
echo "üì¶ T·ªï ch·ª©c dotfiles v√†o package structure..."

# Basic dotfiles
for file in .bashrc .bash_profile .zshenv .zshrc .zprofile .condarc .gitconfig .gitignore_global .tmux.conf .p10k.zsh; do
    if [ -f "$file" ]; then
        if [ ! -f "dotfiles/$file" ]; then
            echo "üìù Moving $file to dotfiles package..."
            mv "$file" "dotfiles/"
        fi
    fi
done

# Directories
for dir in .hammerspoon .vim .tmux; do
    if [ -d "$dir" ] && [ ! -L "dotfiles/$dir" ]; then
        echo "üìÇ Moving $dir to dotfiles package..."
        mv "$dir" "dotfiles/"
    fi
done

# Config directory - di chuy·ªÉn t·ª´ng app config
if [ -d ".config" ]; then
    echo "‚öôÔ∏è  Moving .config applications..."
    if [ ! -d "dotfiles/.config" ]; then
        mkdir -p "dotfiles/.config"
    fi
    
    for app_dir in .config/*; do
        if [ -d "$app_dir" ]; then
            app_name=$(basename "$app_dir")
            if [ ! -d "dotfiles/.config/$app_name" ]; then
                echo "üì± Moving .config/$app_name..."
                mv "$app_dir" "dotfiles/.config/"
            fi
        fi
    done
    
    # Remove empty .config if exists
    if [ -d ".config" ] && [ -z "$(ls -A .config)" ]; then
        rmdir .config
    fi
fi

# Backup existing files trong home directory
echo ""
echo "üíæ Backup existing files..."
BACKUP_DIR="$HOME/.dotfiles_backup_$(date +%Y%m%d_%H%M%S)"
mkdir -p "$BACKUP_DIR"

# Function to backup file if it exists and is not a symlink
backup_if_exists() {
    local file="$1"
    if [ -e "$HOME/$file" ] && [ ! -L "$HOME/$file" ]; then
        echo "üì¶ Backup ~/$file"
        cp -r "$HOME/$file" "$BACKUP_DIR/"
        rm -rf "$HOME/$file"
    fi
}

# Backup dotfiles n·∫øu ch√∫ng t·ªìn t·∫°i v√† kh√¥ng ph·∫£i symlink
backup_if_exists ".bashrc"
backup_if_exists ".bash_profile"
backup_if_exists ".zshenv"
backup_if_exists ".zshrc"
backup_if_exists ".zprofile"
backup_if_exists ".condarc"
backup_if_exists ".gitconfig"
backup_if_exists ".gitignore_global"
backup_if_exists ".tmux.conf"
backup_if_exists ".p10k.zsh"
backup_if_exists ".hammerspoon"
backup_if_exists ".vim"
backup_if_exists ".tmux"

# Backup .config apps
if [ -d "$HOME/.config" ]; then
    for app_dir in dotfiles/.config/*; do
        if [ -d "$app_dir" ]; then
            app_name=$(basename "$app_dir")
            backup_if_exists ".config/$app_name"
        fi
    done
fi

# Stow dotfiles
echo ""
echo "üîó Stowing dotfiles..."
cd "$DOTFILES_DIR"

# Stow the dotfiles package
stow -v dotfiles

echo ""
echo "‚úÖ Ho√†n th√†nh setup v·ªõi GNU Stow!"
echo ""
echo "üìù Notes:"
echo "   - Dotfiles ƒë√£ ƒë∆∞·ª£c stow t·ª´: $DOTFILES_DIR/dotfiles/"
echo "   - Files c≈© ƒë∆∞·ª£c backup t·∫°i: $BACKUP_DIR"
echo "   - ƒê·ªÉ unstow: cd $DOTFILES_DIR && stow -D dotfiles"
echo "   - ƒê·ªÉ restow: cd $DOTFILES_DIR && stow -R dotfiles"
echo ""
echo "üîÑ ƒê·ªÉ reload shell config:"
echo "   source ~/.zshrc" 